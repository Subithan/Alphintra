name: Platform CI

on:
  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '20'

jobs:
  backend:
    name: Backend Maven Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ auth-service, service-gateway ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.service }}-${{ hashFiles('src/backend/${{ matrix.service }}/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-${{ matrix.service }}-

      - name: Run mvn clean verify
        working-directory: src/backend/${{ matrix.service }}
        run: mvn -B -ntp clean verify

  frontend:
    name: Frontend Lint & Types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/frontend/package-lock.json

      - name: Install dependencies
        working-directory: src/frontend
        run: npm ci

      - name: Run lint
        working-directory: src/frontend
        run: npm run lint:ci

      - name: Run format check
        working-directory: src/frontend
        run: npm run format:check

      - name: Run type-check
        working-directory: src/frontend
        run: npm run type-check

  security:
    name: Repository Security Scan
    needs: [ backend, frontend ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.26.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          exit-code: '1'
          security-checks: 'vuln,secret,config'
          scan-ref: '.'

  cloud-build:
    name: Trigger Cloud Build
    needs: [ backend, frontend, security ]
    if: secrets.GCP_WORKLOAD_IDENTITY_PROVIDER != '' && secrets.GCP_SERVICE_ACCOUNT != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ auth-service, service-gateway ]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: alphintra-472817
          skip_install: false

      - name: Submit Cloud Build (${{ matrix.service }})
        run: |
          gcloud builds submit \
            --config=src/backend/${{ matrix.service }}/cloudbuild.yaml \
            --substitutions=_COMMIT_SHA=${{ github.sha }},_SERVICE_NAME=${{ matrix.service }}
