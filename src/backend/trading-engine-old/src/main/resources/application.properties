spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://127.0.0.1:5432/alphintra_trading_engine}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:trading_engine}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:alphintra@123}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.autoconfigure.exclude=
  org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,
  org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,
  org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration

# Binance API configuration for cloud deployment
binance.api.enabled=${BINANCE_API_ENABLED:true}
binance.api.base-url=${BINANCE_API_URL:https://api.binance.com}
binance.api.testnet.enabled=${BINANCE_TESTNET_ENABLED:true}

# Kafka configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Kafka consumer configuration for the new service
spring.kafka.consumer.group-id=matching-engine-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# The name of the Kafka topic for new orders. This is a crucial property
# that both the producer and consumer use.
order.topic.name=new-orders

server.port=8008
management.endpoints.web.exposure.include=health

services.wallet.url=http://wallet-service:8011
services.strategy.url=http://localhost:8002
