# Path: Alphintra/src/backend/auth-service/Dockerfile.db-initializer
# Purpose: Docker configuration to run the DockerNetworkDatabaseInitializer.
# This builds the auth-service JAR and then executes the specific initializer class from it.

# Stage 1: Build the Java application (same as auth-service Dockerfile to get the JAR)
FROM maven:3.9.9-eclipse-temurin-17 AS builder
WORKDIR /app
COPY pom.xml .
COPY src ./src
# Build the JAR, skipping tests as it's a utility
RUN mvn clean package -DskipTests

# Stage 2: Create a lightweight runtime image for the initializer
# eclipse-temurin:17-jre-alpine is good for utilities; doesn't need to be distroless as it's short-lived
FROM eclipse-temurin:17-jre-alpine
WORKDIR /app

# Copy the generated JAR from the builder stage
# This JAR contains both the main application and the initializer class
COPY --from=builder /app/target/auth-service-0.0.1-SNAPSHOT.jar /app/auth-service.jar

# Define the command to run the DockerNetworkDatabaseInitializer's main method
# We use 'java -cp' to put the JAR on the classpath and then specify the full class name.
ENTRYPOINT ["java", "-cp", "/app/auth-service.jar", "com.alphintra.auth_service.DockerNetworkDatabaseInitializer"]