apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-ml-strategy-service
  namespace: alphintra
  labels:
    app: ai-ml-strategy-service
    version: v1
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-ml-strategy-service
  template:
    metadata:
      labels:
        app: ai-ml-strategy-service
        version: v1
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8003"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ai-ml-strategy-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: ai-ml-strategy-service
        image: gcr.io/alphintra/ai-ml-strategy-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8002
          protocol: TCP
        - name: metrics
          containerPort: 8003
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "8002"
        - name: PROMETHEUS_PORT
          value: "8003"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-ml-strategy-db-secret
              key: database-url
        - name: TIMESCALE_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-ml-strategy-db-secret
              key: timescale-database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ai-ml-strategy-redis-secret
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ai-ml-strategy-auth-secret
              key: secret-key
        - name: GCP_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: ai-ml-strategy-config
              key: gcp-project-id
        - name: GCS_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: ai-ml-strategy-config
              key: gcs-bucket-name
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: ai-ml-strategy-config
              key: mlflow-tracking-uri
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: ai-ml-strategy-config
              key: kafka-bootstrap-servers
        - name: VERTEX_AI_LOCATION
          valueFrom:
            configMapKeyRef:
              name: ai-ml-strategy-config
              key: vertex-ai-location
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: ai-ml-strategy-service
  namespace: alphintra
  labels:
    app: ai-ml-strategy-service
    component: backend
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8002
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 8003
    targetPort: metrics
    protocol: TCP
  selector:
    app: ai-ml-strategy-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-ml-strategy-service-hpa
  namespace: alphintra
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-ml-strategy-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-ml-strategy-service
  namespace: alphintra
  annotations:
    iam.gke.io/gcp-service-account: ai-ml-strategy-service@PROJECT_ID.iam.gserviceaccount.com

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ai-ml-strategy-service-pdb
  namespace: alphintra
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ai-ml-strategy-service