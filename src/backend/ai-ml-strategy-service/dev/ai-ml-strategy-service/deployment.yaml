apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-ml-strategy-service
  labels:
    app: ai-ml-strategy-service
    component: backend
    tier: service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-ml-strategy-service
  template:
    metadata:
      labels:
        app: ai-ml-strategy-service
        component: backend
        tier: service
    spec:
      nodeSelector:
        pool: nat-backend
      serviceAccountName: ai-ml-strategy-service-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: ai-ml-strategy-service
        image: us-central1-docker.pkg.dev/alphintra-472817/alphintra/ai-ml-strategy-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8002
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "8002"
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: ai-ml-strategy-service-config
              key: dev-mode
        - name: ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: ai-ml-strategy-service-config
              key: cors-allow-origins
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-ml-strategy-service
              topologyKey: kubernetes.io/hostname
