apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ deployment_name }}
  labels:
    app: {{ deployment_name }}
    component: model-serving
    version: {{ model_version }}
spec:
  replicas: {{ min_replicas }}
  selector:
    matchLabels:
      app: {{ deployment_name }}
  template:
    metadata:
      labels:
        app: {{ deployment_name }}
        component: model-serving
        version: {{ model_version }}
    spec:
      containers:
      - name: model-server
        image: {{ image_tag }}
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: {{ cpu_request }}
            memory: {{ memory_request }}
            {% if gpu_request > 0 %}
            nvidia.com/gpu: {{ gpu_request }}
            {% endif %}
          limits:
            cpu: {{ cpu_limit }}
            memory: {{ memory_limit }}
            {% if gpu_request > 0 %}
            nvidia.com/gpu: {{ gpu_request }}
            {% endif %}
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: MODEL_NAME
          value: {{ model_name }}
        - name: MODEL_VERSION
          value: {{ model_version }}
        - name: ENVIRONMENT
          value: {{ environment }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ deployment_name }}-service
  labels:
    app: {{ deployment_name }}
    component: model-serving
spec:
  selector:
    app: {{ deployment_name }}
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ deployment_name }}-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ deployment_name }}
  minReplicas: {{ min_replicas }}
  maxReplicas: {{ max_replicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ target_cpu_utilization }}
  {% if target_rps %}
  - type: Pods
    pods:
      metric:
        name: requests_per_second
      target:
        type: AverageValue
        averageValue: {{ target_rps }}
  {% endif %}