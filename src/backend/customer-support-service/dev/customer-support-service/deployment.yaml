apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-support-service
  namespace: alphintra
  labels:
    app: customer-support-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: customer-support-service
  template:
    metadata:
      labels:
        app: customer-support-service
        version: v1
    spec:
      serviceAccountName: customer-support-service
      containers:
      - name: customer-support-service
        image: us-central1-docker.pkg.dev/alphintra-472817/alphintra/customer-support-service:latest
        ports:
        - containerPort: 8010
          name: http
        - containerPort: 8011
          name: websocket
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "cloud"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: customer-support-service-secrets
              key: database-url
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: customer-support-service-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: customer-support-service-secrets
              key: db-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: customer-support-service-secrets
              key: jwt-secret
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: customer-support-service-config
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: customer-support-service-config
              key: redis-port
        - name: ELASTICSEARCH_HOST
          valueFrom:
            configMapKeyRef:
              name: customer-support-service-config
              key: elasticsearch-host
        - name: ELASTICSEARCH_PORT
          valueFrom:
            configMapKeyRef:
              name: customer-support-service-config
              key: elasticsearch-port
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8010
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8010
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3