server:
  port: 8010
  servlet:
    context-path: "/api/customer-support"
  websocket:
    port: 8085

spring:
  application:
    name: customer-support-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://127.0.0.1:5432/alphintra_customer_support}
    username: ${DB_USER:${SPRING_DATASOURCE_USERNAME:customer_support}}
    password: ${DB_PASSWORD:${SPRING_DATASOURCE_PASSWORD:alphintra@123}}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
  
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: false
        jdbc:
          time_zone: UTC
    show-sql: false
  
  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 1
  
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:support@alphintra.com}
    password: ${MAIL_PASSWORD:password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    mail:
      enabled: false
    elasticsearch:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.alphintra.customersupport: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/customer-support-service.log

# Customer Support Service Configuration
support:
  ai:
    enabled: true
    openai:
      api-key: ${OPENAI_API_KEY:sk-test-key}
      model: gpt-4
      max-tokens: 500
      temperature: 0.7
  
  ticket:
    auto-assignment: true
    escalation:
      auto-escalate-after-hours: 24
      max-escalation-level: 3
    sla:
      response-time-minutes:
        low: 480      # 8 hours
        medium: 240   # 4 hours
        high: 60      # 1 hour
        urgent: 15    # 15 minutes
        critical: 5   # 5 minutes
  
  communication:
    websocket:
      enabled: true
      heartbeat-interval: 30000
    email:
      enabled: true
      template-path: classpath:templates/email/
    sms:
      enabled: false
      provider: twilio
  
  knowledge-base:
    elasticsearch:
      enabled: true
      hosts: ${ELASTICSEARCH_HOSTS:localhost:9200}
      index-name: support-kb
    auto-learning: true
  
  monitoring:
    metrics:
      enabled: true
      export-interval: 60s
    alerts:
      high-priority-tickets: 10
      agent-overload-threshold: 0.9

---
spring:
  config:
    activate:
      on-profile: kubernetes
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgresql-service:5432/alphintra_customer_support}
    username: ${DB_USER:${SPRING_DATASOURCE_USERNAME:customer_support}}
    password: ${DB_PASSWORD:${SPRING_DATASOURCE_PASSWORD:alphintra@123}}
  
support:
  knowledge-base:
    elasticsearch:
      hosts: ${ELASTICSEARCH_HOSTS:elasticsearch-service:9200}

---
spring:
  config:
    activate:
      on-profile: local

---
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/alphintra_customer_support?user=customer_support&password=alphintra%40123}
    driver-class-name: org.postgresql.Driver
