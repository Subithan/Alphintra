spring.datasource.url=${DATABASE_URL:jdbc:postgresql://postgres:5432/alphintra_trading_engine}
spring.datasource.username=${DB_USERNAME:alphintra}
spring.datasource.password=${DB_PASSWORD:alphintra123}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.password=${REDIS_PASSWORD:redis123}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.connect-timeout=2000ms

# Redis logging
logging.level.org.springframework.data.redis=DEBUG
logging.level.io.lettuce.core=DEBUG

# Kafka configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Kafka consumer configuration for the new service
spring.kafka.consumer.group-id=matching-engine-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# The name of the Kafka topic for new orders. This is a crucial property
# that both the producer and consumer use.
order.topic.name=new-orders

server.port=8008
management.endpoints.web.exposure.include=health

services.wallet.url=http://wallet-service:8011
services.strategy.url=http://localhost:8002