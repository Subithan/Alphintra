apiVersion: apps/v1
kind: Deployment
metadata:
  name: wallet-service
  labels:
    app: wallet-service
    component: backend
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wallet-service
  template:
    metadata:
      labels:
        app: wallet-service
        version: v1
        component: backend
        environment: dev
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8011"
        prometheus.io/path: "/health"
    spec:
      nodeSelector:
        pool: nat-backend
      serviceAccountName: wallet-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        # Wallet Service Application Container
        - name: wallet-service
          image: gcr.io/alphintra-472817/wallet-service:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8011
              protocol: TCP
          envFrom:
            - configMapRef:
                name: wallet-service-config
            - secretRef:
                name: wallet-service-secrets
          env:
            # Override database URL to use Cloud SQL proxy
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: wallet-service-secrets
                  key: DATABASE_URL
            # Database username from secret
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: wallet-service-secrets
                  key: SPRING_DATASOURCE_USERNAME
            # Database password from secret
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wallet-service-secrets
                  key: SPRING_DATASOURCE_PASSWORD
            # JWT secret for future authentication
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: wallet-service-secrets
                  key: JWT_SECRET_KEY
            # Encryption key for API keys
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: wallet-service-secrets
                  key: ENCRYPTION_KEY
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
            failureThreshold: 12
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
            - name: tmp
              mountPath: /tmp

        # Cloud SQL Proxy Container
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.10.1
          args:
            - "--port=5432"
            - "--address=127.0.0.1"
            - "--private-ip"
            - "--credentials-file=/secrets/cloudsql/service-account.json"
            - "alphintra-472817:us-central1:alphintra-db-instance"
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 50m
              memory: 128Mi
          volumeMounts:
            - name: cloudsql-sa
              mountPath: /secrets/cloudsql
              readOnly: true

      volumes:
        - name: cloudsql-sa
          secret:
            secretName: cloudsql-sa-secret
        - name: app-logs
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
