apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-api
  namespace: alphintra-dev
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
spec:
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
      - name: trading-api
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes,dev"
        - name: LOGGING_LEVEL_ROOT
          value: "DEBUG"
        - name: LOGGING_LEVEL_COM_ALPHINTRA
          value: "DEBUG"
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_KAFKA
          value: "DEBUG"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "health,info,metrics,prometheus,env,configprops,kafka"
        - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
          value: "always"
        - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED
          value: "true"
        - name: MANAGEMENT_TRACING_SAMPLING_PROBABILITY
          value: "1.0"
        - name: SPRING_SLEUTH_ZIPKIN_BASE_URL
          value: "http://jaeger-collector.istio-system:14268"
        - name: SPRING_JPA_SHOW_SQL
          value: "true"
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL
          value: "true"
        - name: TRADING_SIMULATION_MODE
          value: "true"
        - name: MARKET_DATA_CACHE_TTL
          value: "5"
        - name: ORDER_VALIDATION_STRICT
          value: "false"
        - name: RISK_MANAGEMENT_ENABLED
          value: "true"
        - name: POSITION_SIZE_LIMIT
          value: "1000000"
        - name: DAILY_LOSS_LIMIT
          value: "10000"
        - name: MAX_ORDERS_PER_SECOND
          value: "100"
        - name: KAFKA_CONSUMER_GROUP_ID
          value: "trading-api-dev"
        - name: KAFKA_AUTO_OFFSET_RESET
          value: "earliest"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3