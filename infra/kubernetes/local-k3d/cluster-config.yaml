# k3d cluster configuration for Alphintra Financial Trading Platform
# Optimized for secure microservices architecture with internal networking

apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: alphintra-cluster
servers: 1
agents: 3
kubeAPI:
  host: "127.0.0.1"
  hostIP: "127.0.0.1"
  hostPort: "6550"
image: rancher/k3s:v1.28.5-k3s1
network: alphintra-k3d-network
ports:
  - port: 80:80
    nodeFilters:
      - loadbalancer
  - port: 443:443
    nodeFilters:
      - loadbalancer
  - port: 30001:30001
    nodeFilters:
      - loadbalancer
  - port: 8080:8080
    nodeFilters:
      - loadbalancer
  - port: 5432:5432
    nodeFilters:
      - loadbalancer
  - port: 6379:6379
    nodeFilters:
      - loadbalancer
env:
  - envVar: K3S_KUBECONFIG_OUTPUT
    nodeFilters:
      - server:*
  - envVar: K3S_KUBECONFIG_MODE
    nodeFilters:
      - server:*
registries:
  create:
    name: alphintra-registry
    host: "0.0.0.0"
    hostPort: "5002"
  config: |
    mirrors:
      "localhost:5002":
        endpoint:
          - http://alphintra-registry:5000
options:
  k3d:
    wait: true
    timeout: "300s"
    disableLoadbalancer: false
    disableImageVolume: false
  k3s:
    extraArgs:
      - arg: --disable=traefik
        nodeFilters:
          - server:*
      - arg: --disable=servicelb
        nodeFilters:
          - server:*
      - arg: --disable=metrics-server
        nodeFilters:
          - server:*
      - arg: --kube-proxy-arg=metrics-bind-address=0.0.0.0
        nodeFilters:
          - server:*
      - arg: --kubelet-arg=config=/etc/rancher/k3s/kubelet.config
        nodeFilters:
          - agent:*

    # nodeLabels:
    #   - label: node-type=general
    #     nodeFilters:
    #       - agent:0
volumes:
  - volume: /tmp/k3d-alphintra-storage:/var/lib/rancher/k3s/storage
    nodeFilters:
      - all