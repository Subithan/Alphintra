# Application Configuration for Alphintra Trading Platform
apiVersion: v1
kind: ConfigMap
metadata:
  name: alphintra-config
  namespace: alphintra
  labels:
    app: alphintra
    component: config
data:
  # Application settings
  APP_NAME: "Alphintra Trading Platform"
  APP_VERSION: "1.0.0"
  ENVIRONMENT: "development"
  LOG_LEVEL: "INFO"
  
  # Database configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "trading_db"
  DB_SSL_MODE: "require"
  DB_MAX_CONNECTIONS: "100"
  DB_CONNECTION_TIMEOUT: "30"
  
  # TimescaleDB configuration
  TIMESCALE_HOST: "timescaledb-service"
  TIMESCALE_PORT: "5432"
  TIMESCALE_DB: "market_data_db"
  
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_TIMEOUT: "5"
  
  # Kafka configuration
  KAFKA_BROKERS: "kafka-service:9092"
  KAFKA_GROUP_ID: "alphintra-trading"
  KAFKA_AUTO_OFFSET_RESET: "earliest"
  KAFKA_ENABLE_AUTO_COMMIT: "true"
  KAFKA_COMPRESSION_TYPE: "snappy"
  
  # Pub/Sub configuration (for cloud deployment)
  PUBSUB_PROJECT_ID: "alphintra-project"
  PUBSUB_MARKET_DATA_TOPIC: "market-data"
  PUBSUB_TRADE_EVENTS_TOPIC: "trade-events"
  PUBSUB_RISK_ALERTS_TOPIC: "risk-alerts"
  
  # API Gateway configuration
  GATEWAY_PORT: "8080"
  GATEWAY_TIMEOUT: "30s"
  GATEWAY_MAX_CONNECTIONS: "1000"
  
  # Trading API configuration
  TRADING_API_PORT: "8081"
  TRADING_API_WORKERS: "4"
  TRADING_API_MAX_REQUESTS: "1000"
  
  # Strategy Engine configuration
  STRATEGY_ENGINE_PORT: "8082"
  STRATEGY_ENGINE_WORKERS: "2"
  STRATEGY_ENGINE_POLLING_INTERVAL: "1"
  
  # Auth Service configuration
  AUTH_SERVICE_PORT: "8083"
  AUTH_JWT_EXPIRY: "24h"
  AUTH_REFRESH_TOKEN_EXPIRY: "7d"
  
  # Broker configuration
  BROKER_CONNECTOR_PORT: "8084"
  BROKER_SIMULATOR_PORT: "8085"
  BROKER_TIMEOUT: "10s"
  
  # Monitoring configuration
  METRICS_PORT: "9090"
  HEALTH_CHECK_PORT: "8088"
  PROMETHEUS_ENDPOINT: "/metrics"
  
  # External services
  EXTERNAL_API_TIMEOUT: "30s"
  EXTERNAL_API_RETRY_COUNT: "3"
  EXTERNAL_API_RATE_LIMIT: "100"
  
  # Security settings
  CORS_ALLOWED_ORIGINS: "*"
  CORS_ALLOWED_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
  CORS_ALLOWED_HEADERS: "Content-Type,Authorization"
  
  # Feature flags
  ENABLE_DEBUG_MODE: "true"
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  ENABLE_RATE_LIMITING: "false"
  ENABLE_CACHING: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: monitoring
  labels:
    app: monitoring
    component: config
data:
  # Prometheus configuration
  PROMETHEUS_RETENTION: "15d"
  PROMETHEUS_SCRAPE_INTERVAL: "15s"
  PROMETHEUS_EVALUATION_INTERVAL: "15s"
  
  # Grafana configuration
  GRAFANA_ADMIN_PASSWORD: "admin123"
  GRAFANA_DOMAIN: "grafana.alphintra.local"
  GRAFANA_ROOT_URL: "http://grafana.alphintra.local"
  
  # Alertmanager configuration
  ALERTMANAGER_RETENTION: "120h"
  ALERTMANAGER_GROUP_WAIT: "10s"
  ALERTMANAGER_GROUP_INTERVAL: "10s"
  ALERTMANAGER_REPEAT_INTERVAL: "1h"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stream-processing-config
  namespace: stream-processing
  labels:
    app: stream-processing
    component: config
data:
  # Flink configuration
  FLINK_JOBMANAGER_HEAP: "1024m"
  FLINK_TASKMANAGER_HEAP: "1024m"
  FLINK_TASKMANAGER_SLOTS: "2"
  FLINK_PARALLELISM: "2"
  FLINK_CHECKPOINTING_INTERVAL: "60000"
  
  # Spark configuration
  SPARK_MASTER: "spark://spark-master:7077"
  SPARK_DRIVER_MEMORY: "1g"
  SPARK_EXECUTOR_MEMORY: "1g"
  SPARK_EXECUTOR_CORES: "2"
  SPARK_SQL_ADAPTIVE_ENABLED: "true"