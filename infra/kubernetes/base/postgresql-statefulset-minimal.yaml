# Minimal PostgreSQL StatefulSet for Local K3D Development
# Ultra-lightweight configuration for development purposes only

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config-minimal
  namespace: alphintra
data:
  postgres.conf: |
    # Minimal PostgreSQL configuration for local development
    listen_addresses = '*'
    port = 5432
    max_connections = 20
    shared_buffers = 32MB
    effective_cache_size = 64MB
    work_mem = 1MB
    maintenance_work_mem = 16MB
    
    # Performance optimizations for local development
    fsync = off
    synchronous_commit = off
    full_page_writes = off
    checkpoint_completion_target = 0.9
    
    # Minimal logging
    log_line_prefix = '%t [%p]: '
    log_min_duration_statement = 5000
    log_checkpoints = off
    log_connections = off
    log_disconnections = off
    
  init-databases.sql: |
    -- Create minimal databases for local development
    CREATE DATABASE alphintra_main;
    CREATE USER alphintra_user WITH ENCRYPTED PASSWORD 'alphintra_pass';
    GRANT ALL PRIVILEGES ON DATABASE alphintra_main TO alphintra_user;

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: alphintra
  labels:
    app: postgresql
    component: database
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        component: database
    spec:
      containers:
      - name: postgresql
        image: postgres:15.3-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres_dev_password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: postgresql
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgres.conf
        - name: postgresql-init
          mountPath: /docker-entrypoint-initdb.d/init-databases.sql
          subPath: init-databases.sql
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
      volumes:
      - name: postgresql-config
        configMap:
          name: postgresql-config-minimal
      - name: postgresql-init
        configMap:
          name: postgresql-config-minimal
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-path
      resources:
        requests:
          storage: 500Mi

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: alphintra
  labels:
    app: postgresql
    component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  selector:
    app: postgresql