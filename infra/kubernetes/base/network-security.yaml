# Network Security Policies for Financial Trading Platform
# Implements defense-in-depth security model with strict network isolation

# Default deny-all policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: alphintra
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow API Gateway ingress from external traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-ingress
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Ingress
  ingress:
  # Allow external traffic through ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  # Allow health checks from Kubernetes
  - from: []
    ports:
    - protocol: TCP
      port: 8080

---
# Allow API Gateway egress to internal services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-egress
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Egress
  egress:
  # Allow access to all internal services
  - to:
    - namespaceSelector:
        matchLabels:
          name: alphintra
    ports:
    - protocol: TCP
      port: 8080
  # Allow access to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka-server
    ports:
    - protocol: TCP
      port: 8761
  # Allow access to Config Server
  - to:
    - podSelector:
        matchLabels:
          app: config-server
    ports:
    - protocol: TCP
      port: 8888
  # Allow access to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS egress for external services
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80

---
# Auth Service network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: auth-service-policy
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: auth-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  # Allow from other microservices for token validation
  - from:
    - namespaceSelector:
        matchLabels:
          name: alphintra
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow access to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
    ports:
    - protocol: TCP
      port: 5432
  # Allow access to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow access to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka-server
    ports:
    - protocol: TCP
      port: 8761
  # DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Trading Service network policy (high security)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: trading-service-policy
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: trading-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Only allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  # Allow from risk service for risk checks
  - from:
    - podSelector:
        matchLabels:
          app: risk-service
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow access to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
    ports:
    - protocol: TCP
      port: 5432
  # Allow access to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow access to Risk Service
  - to:
    - podSelector:
        matchLabels:
          app: risk-service
    ports:
    - protocol: TCP
      port: 8080
  # Allow access to Broker Service
  - to:
    - podSelector:
        matchLabels:
          app: broker-service
    ports:
    - protocol: TCP
      port: 8080
  # Allow access to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka-server
    ports:
    - protocol: TCP
      port: 8761
  # DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # External broker APIs (HTTPS only)
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
# Risk Service network policy (critical security)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: risk-service-policy
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: risk-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  # Allow from Trading Service for risk checks
  - from:
    - podSelector:
        matchLabels:
          app: trading-service
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow access to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
    ports:
    - protocol: TCP
      port: 5432
  # Allow access to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow access to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka-server
    ports:
    - protocol: TCP
      port: 8761
  # DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Database network policy (most restrictive)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgresql-policy
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: postgresql
  policyTypes:
  - Ingress
  ingress:
  # Only allow from specific services
  - from:
    - podSelector:
        matchLabels:
          app: auth-service
    - podSelector:
        matchLabels:
          app: trading-service
    - podSelector:
        matchLabels:
          app: risk-service
    - podSelector:
        matchLabels:
          app: user-service
    - podSelector:
        matchLabels:
          app: broker-service
    - podSelector:
        matchLabels:
          app: strategy-service
    - podSelector:
        matchLabels:
          app: notification-service
    ports:
    - protocol: TCP
      port: 5432

---
# Redis network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-policy
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  # Allow from all internal services (for caching)
  - from:
    - namespaceSelector:
        matchLabels:
          name: alphintra
    ports:
    - protocol: TCP
      port: 6379

---
# Eureka Server network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: eureka-policy
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: eureka-server
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from all services for service discovery
  - from:
    - namespaceSelector:
        matchLabels:
          name: alphintra
    ports:
    - protocol: TCP
      port: 8761
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8761
  egress:
  # DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Config Server network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: config-server-policy
  namespace: alphintra
spec:
  podSelector:
    matchLabels:
      app: config-server
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from all services for configuration
  - from:
    - namespaceSelector:
        matchLabels:
          name: alphintra
    ports:
    - protocol: TCP
      port: 8888
  egress:
  # Allow access to Eureka
  - to:
    - podSelector:
        matchLabels:
          app: eureka-server
    ports:
    - protocol: TCP
      port: 8761
  # DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # HTTPS for Git repositories
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 22

---
# Monitoring namespace access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring
  namespace: alphintra
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  # Allow Prometheus scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 15090  # Istio metrics

---
# Pod Security Policy equivalent using Pod Security Standards
apiVersion: v1
kind: Namespace
metadata:
  name: alphintra
  labels:
    name: alphintra
    istio-injection: enabled
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted

---
# Service Account for secure pod operations
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alphintra-service-account
  namespace: alphintra
automountServiceAccountToken: false

---
# Role for limited permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: alphintra-role
  namespace: alphintra
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch"]

---
# Role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: alphintra-role-binding
  namespace: alphintra
subjects:
- kind: ServiceAccount
  name: alphintra-service-account
  namespace: alphintra
roleRef:
  kind: Role
  name: alphintra-role
  apiGroup: rbac.authorization.k8s.io