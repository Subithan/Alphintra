apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-service
  namespace: alphintra
spec:
  replicas: 1  # Single replica for minimal deployment
  template:
    spec:
      containers:
      - name: trading-service
        image: python:3.11-slim
        command:
          - python
          - -c
          - |
            import json
            from fastapi import FastAPI
            from fastapi.middleware.cors import CORSMiddleware
            import uvicorn
            
            app = FastAPI(title="Alphintra Trading API (Minimal)", version="1.0.0")
            
            app.add_middleware(
                CORSMiddleware,
                allow_origins=["*"],
                allow_credentials=True,
                allow_methods=["*"],
                allow_headers=["*"],
            )
            
            @app.get("/health")
            async def health():
                return {"status": "healthy", "service": "trading-api-minimal"}
            
            @app.get("/api/trading/portfolio")
            async def get_portfolio():
                return {"portfolio": [], "message": "Minimal trading API"}
            
            @app.post("/api/trading/order")
            async def place_order(order: dict):
                return {"order_id": "test-123", "status": "pending", "message": "Order placed (test)"}
            
            if __name__ == "__main__":
                uvicorn.run(app, host="0.0.0.0", port=8080)
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 10
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      initContainers: []  # Remove all init containers for minimal deployment
---
apiVersion: v1
kind: Service
metadata:
  name: trading-service
  namespace: alphintra
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: trading-service