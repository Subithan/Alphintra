# Spring Cloud Config Server for Centralized Configuration Management
# Provides secure, versioned configuration for all microservices

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-server-config
  namespace: alphintra
data:
  application.yml: |
    server:
      port: 8888
    
    spring:
      application:
        name: config-server
      cloud:
        config:
          server:
            git:
              uri: https://github.com/alphintra/config-repo
              default-label: main
              search-paths: "{application}"
              clone-on-start: true
              force-pull: true
            encrypt:
              enabled: false
            health:
              repositories:
                alphintra-config:
                  label: main
                  name: alphintra-config
                  profiles: default
      security:
        user:
          name: config
          password: ${CONFIG_SERVER_PASSWORD:alphintra_config_pass}
    
    eureka:
      client:
        service-url:
          defaultZone: http://eureka-server.alphintra.svc.cluster.local:8761/eureka/
        register-with-eureka: true
        fetch-registry: true
      instance:
        prefer-ip-address: true
        ip-address: ${POD_IP:127.0.0.1}
        instance-id: ${spring.application.name}:${POD_IP}:${server.port}
        lease-renewal-interval-in-seconds: 10
        lease-expiration-duration-in-seconds: 30
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,refresh,env,configprops
      endpoint:
        health:
          show-details: always
    
    logging:
      level:
        org.springframework.cloud.config: DEBUG
        org.springframework.security: DEBUG

  # Default configuration for microservices
  alphintra-default.yml: |
    # Default configuration for all Alphintra microservices
    spring:
      datasource:
        hikari:
          maximum-pool-size: 20
          minimum-idle: 5
          connection-timeout: 30000
          idle-timeout: 600000
          max-lifetime: 1800000
          leak-detection-threshold: 60000
      
      redis:
        host: redis-primary.alphintra.svc.cluster.local
        port: 6379
        password: ${REDIS_PASSWORD:alphintra_redis_pass}
        timeout: 2000ms
        jedis:
          pool:
            max-active: 50
            max-idle: 20
            min-idle: 5
            max-wait: 2000ms
    
    eureka:
      client:
        service-url:
          defaultZone: http://eureka-server.alphintra.svc.cluster.local:8761/eureka/
        register-with-eureka: true
        fetch-registry: true
      instance:
        prefer-ip-address: true
        lease-renewal-interval-in-seconds: 10
        lease-expiration-duration-in-seconds: 30
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
    
    logging:
      level:
        com.alphintra: DEBUG
        org.springframework.security: INFO

---
apiVersion: v1
kind: Secret
metadata:
  name: config-server-secret
  namespace: alphintra
type: Opaque
data:
  # Base64 encoded: alphintra_config_pass
  config-password: YWxwaGludHJhX2NvbmZpZ19wYXNz

---
apiVersion: v1
kind: Service
metadata:
  name: config-server
  namespace: alphintra
  labels:
    app: config-server
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8888
      targetPort: 8888
      protocol: TCP
  selector:
    app: config-server

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  namespace: alphintra
  labels:
    app: config-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config-server
  template:
    metadata:
      labels:
        app: config-server
    spec:
      containers:
      - name: config-server
        image: openjdk:17-jre-slim
        imagePullPolicy: IfNotPresent
        command:
          - java
          - -jar
          - /app/config-server.jar
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIG_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: config-server-secret
              key: config-password
        - name: JAVA_OPTS
          value: "-Xmx512m -Xms256m -Dspring.profiles.active=native"
        ports:
        - name: http
          containerPort: 8888
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8888
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8888
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: config-server-config
          mountPath: /workspace/application.yml
          subPath: application.yml
        - name: config-server-config
          mountPath: /workspace/alphintra-default.yml
          subPath: alphintra-default.yml
        - name: config-jar
          mountPath: /app
      volumes:
      - name: config-server-config
        configMap:
          name: config-server-config
      - name: config-jar
        emptyDir: {}
      initContainers:
      - name: download-config-server
        image: curlimages/curl:latest
        command:
          - sh
          - -c
          - |
            # Download Spring Cloud Config Server JAR
            curl -L -o /app/config-server.jar \
              https://github.com/spring-cloud/spring-cloud-config/releases/download/v4.0.4/spring-cloud-config-server-4.0.4.jar
        volumeMounts:
        - name: config-jar
          mountPath: /app