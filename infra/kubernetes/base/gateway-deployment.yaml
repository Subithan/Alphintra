apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: alphintra-dev
  labels:
    app: gateway
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gateway
      version: v1
  template:
    metadata:
      labels:
        app: gateway
        version: v1
    spec:
      containers:
      - name: gateway
        image: localhost:5001/alphintra/gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: SERVER_PORT
          value: "8080"
        - name: EUREKA_CLIENT_ENABLED
          value: "false"
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:8080"
        - name: TRADING_API_URL
          value: "http://trading-api:8080"
        - name: STRATEGY_ENGINE_URL
          value: "http://strategy-engine:8080"
        - name: BROKER_SIMULATOR_URL
          value: "http://broker-simulator:8080"
        - name: REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka.default.svc.cluster.local:9092"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: alphintra-dev
  labels:
    app: gateway
spec:
  selector:
    app: gateway
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP